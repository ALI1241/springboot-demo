<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.UserMapper">

  <sql id="col">
    id,account,pwd,name,gender,year,profile,comment,is_delete,create_id,create_time,update_id,update_time,version
  </sql>

  <insert id="insert" parameterType="UserVo">
    INSERT
    user(
    id,account,pwd,name,create_id,update_id
    )VALUES(
    #{id},#{account},#{pwd},#{id},#{createId},#{createId}
    )
  </insert>

  <update id="update" parameterType="UserVo">
    UPDATE user
    <set>
      <if test="account != null">
        account=#{account},
      </if>
      <if test="pwd != null">
        pwd=#{pwd},
      </if>
      <if test="name != null">
        name=#{name},
      </if>
      <if test="gender != null">
        gender=#{gender},
      </if>
      <if test="year != null">
        year=#{year},
      </if>
      <if test="profile != null">
        profile=#{profile},
      </if>
      <if test="comment != null">
        comment=#{comment},
      </if>
      <if test="isDelete != null">
        is_delete=#{isDelete},
      </if>
      update_id=#{updateId},
      update_time=CURRENT_TIMESTAMP,
      version=version+1,
    </set>
    WHERE
    id=#{id}
  </update>

  <select id="existUniqueKey" parameterType="UserVo"
          resultType="Boolean">
    SELECT
    IFNULL((SELECT true FROM user WHERE
    <if test="id != null">
      id=#{id}
    </if>
    <if test="account != null">
      account=#{account}
    </if>
    ),false)
  </select>

  <select id="findByUniqueKey" parameterType="UserVo"
          resultType="UserVo">
    SELECT
    <include refid="col"/>
    FROM
    user
    WHERE
    <if test="id != null">
      id=#{id}
    </if>
    <if test="account != null">
      account=#{account}
    </if>
  </select>

  <select id="findExact" parameterType="UserVo"
          resultType="UserVo">
    SELECT
    <include refid="col"/>
    FROM
    user
    <where>
      <if test="account != null">
        and account=#{account}
      </if>
      <if test="name != null">
        and name=#{name}
      </if>
      <if test="gender != null">
        and gender=#{gender}
      </if>
      <if test="year != null">
        and year=#{year}
      </if>
      <include refid="com.demo.mapper.BaseMapper.findExact"/>
    </where>
  </select>

  <select id="find" parameterType="UserVo" resultType="UserVo">
    SELECT
    <include refid="col"/>
    FROM
    user
    <where>
      <if test="id != null">
        and id=#{id}
      </if>
      <if test="account != null and account != ''">
        <bind name="account1" value="'%'+ account +'%'"/>
        and account like #{account1}
      </if>
      <if test="name != null and name != ''">
        <bind name="name1" value="'%'+ name +'%'"/>
        and name like #{name1}
      </if>
      <if test="gender != null">
        and gender=#{gender}
      </if>
      <choose>
        <!-- 忽略 -->
        <when test="year == null and yearEnd == null"/>
        <!-- 首尾不会同时为null。首尾相等时，根据Not是否为null决定==和!=。 -->
        <!-- 等于 -->
        <when test="year == yearEnd and yearNot == null">
          and year = #{year}
        </when>
        <!-- 不等 -->
        <when test="year == yearEnd and yearNot != null">
          and year != #{year}
        </when>
        <!-- 首尾不会同时为null，也不会同时相等。根据首尾为null的情况决定<和>。 -->
        <!-- 小于 -->
        <when test="year == null">
          and year &lt;= #{yearEnd}
        </when>
        <!-- 大于 -->
        <when test="yearEnd == null">
          and year &gt;= #{year}
        </when>
        <!-- 首尾都不会为null，也不会相等。根据Not是否为null决定between和not between。 -->
        <!-- 在...与...之间 -->
        <when test="yearNot == null">
          and year between #{year} and #{yearEnd}
        </when>
        <!-- 不在...与...之间 -->
        <when test="yearNot != null">
          and year not between #{year} and #{yearEnd}
        </when>
      </choose>
      <if test="isDelete != null">
        and is_delete=#{isDelete}
      </if>
    </where>
  </select>

</mapper>